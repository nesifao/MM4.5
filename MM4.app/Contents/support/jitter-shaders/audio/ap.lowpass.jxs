<jittershader name="lowpass">
	<description>
	Low Pass Filter
	</description>
	<param name="size" type="vec2" state="TEXDIM0" />
	<param name="rate" type="float" default="11025" />
	<param name="tex0" type="int" default="0" />
	<language name="glsl" version="1.0">
		<bind param="amount" program="fp" />
		<bind param="tex0" program="fp" />
		<program name="vp" type="vertex" source="sh.passthru.xform.vp.glsl" />
		<program name="fp" type="fragment">
<![CDATA[

// texcoords
varying vec2 texcoord0;

// samplers
uniform sampler2DRect tex0;

// max amount
uniform float size;
uniform float rate;

vec2 translate(vec2 coords, float index, float step, float rowsize)
{
	float rows;
	coords.x = coords.x + index * step;
	
	if(coords.x > 1.0)
	{
		rows = floor(coords.x / rowsize);
		coords.x = coords.x - rows * (1.0 + step);
		coords.y = coords.y + rows * step;
	}
	
	return coords;
}

// entry point
void main()
{      
	float step = 1.0 / (size.x - 1);
	float rowsize = size.x * step;
	
	vec4 s1 = texture2DRect(tex0, texcoord0);
	vec4 s2 = texture2DRect(tex0, translate(texcoord0, 1.0, step, rowsize));
	vec4 s3 = texture2DRect(tex0, translate(texcoord0, 2.0, step, rowsize));
	vec4 s4 = texture2DRect(tex0, translate(texcoord0, 3.0, step, rowsize));
	vec4 s5 = texture2DRect(tex0, translate(texcoord0, 4.0, step, rowsize));	

	gl_FragColor = clamp(((s1 + 2*s2 + 4*s3 + 2*s4 + s5) / 10.0), vec4(0.0), vec4(1.0));
}
]]>
		</program>
	</language>
</jittershader>
